name: Build ADFinder DMG

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug commit message
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Contains #build-binary: ${{ contains(github.event.head_commit.message, '#build-binary') }}"
          echo "Full GitHub context: ${{ toJSON(github) }}"

  build-and-export:
    needs: debug
    if: contains(github.event.head_commit.message, '#build-binary')
    runs-on: macos-latest
    env:
      DEBUG: false  # Set to true for detailed build logs if needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 1

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "/opt/homebrew/bin" >> $GITHUB_PATH

      - name: List directory for debugging
        run: |
          ls -R Amiga/Tools/ADFinder/distribution

      - name: Check and select Xcode version
        run: |
          xcodebuild -version
          xcode-select -p
          for version in 16.2 16.1 16.0; do
            if [ -d "/Applications/Xcode_${version}.app/Contents/Developer" ]; then
              sudo xcode-select -s "/Applications/Xcode_${version}.app/Contents/Developer"
              echo "Selected Xcode ${version}"
              break
            fi
          done
          if [ "$(xcodebuild -version | grep -o 'Xcode [0-9]*\.[0-9]*' | cut -d' ' -f2 | cut -d'.' -f1)" -lt 16 ]; then
            echo "::error::Failed to select Xcode 16.x. Available versions:"
            ls -d /Applications/Xcode_*.app/Contents/Developer
            exit 1
          fi

      - name: Build and export ADFinder
        continue-on-error: false
        run: |
          set -euo pipefail
          chmod +x Amiga/Tools/ADFinder/distribution/build_and_package.sh
          cd Amiga/Tools/ADFinder/distribution
          echo "▶ Starting build script..."
          if [ "$DEBUG" = "true" ]; then
            ./build_and_package.sh --project ../ADFinder.xcodeproj --scheme "ADFinder - Release" --configuration Release \
              2> >(tee build-stderr.log >&2) \
              > >(tee build-stdout.log)
            echo "✅ Script completed."
            echo "--- STDERR ---"
            cat build-stderr.log
            echo "--- STDOUT ---"
            cat build-stdout.log
          else
            ./build_and_package.sh --project ../ADFinder.xcodeproj --scheme "ADFinder - Release" --configuration Release > /dev/null 2>&1
            if [ $? -ne 0 ]; then
              echo "::error::Build or export failed. Check logs manually if needed."
              exit 1
            fi
            echo "✅ Build and export completed successfully."
          fi
          ls -l build/ADFinder.app || echo "::error::ADFinder.app not found in build directory"

      - name: Upload build logs (if DEBUG enabled)
        if: env.DEBUG == 'true'
        uses: actions/upload-artifact@v4.4.3
        with:
          name: Build-Logs
          path: |
            Amiga/Tools/ADFinder/distribution/build-stdout.log
            Amiga/Tools/ADFinder/distribution/build-stderr.log

      - name: Upload .app (for debugging)
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ADFinder-App
          path: Amiga/Tools/ADFinder/distribution/build/ADFinder.app
          retention-days: 7

  create-dmg:
    needs: build-and-export
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 1

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "/opt/homebrew/bin" >> $GITHUB_PATH

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          set -euo pipefail
          chmod +x Amiga/Tools/ADFinder/distribution/gendmg.sh
          cd Amiga/Tools/ADFinder/distribution
          echo "▶ Starting DMG creation..."
          echo "Running: ./gendmg.sh --readme dmg_assets/README.md --app build/ADFinder.app --dmg ../releases/ADFinder.dmg --background dmg_assets/dmg-background.png --volicon dmg_assets/dmg-icon.icns"
          set -x
          if [ ! -d "build/ADFinder.app" ]; then
            echo "::error::build/ADFinder.app not found before DMG creation"
            exit 1
          fi
          ./gendmg.sh --readme dmg_assets/README.md --app build/ADFinder.app --dmg ../releases/ADFinder.dmg --background dmg_assets/dmg-background.png --volicon dmg_assets/dmg-icon.icns \
            2> >(tee dmg-stderr.log >&2) \
            > >(tee dmg-stdout.log)
          EXIT_CODE=${PIPESTATUS[0]}
          set +x
          echo "DMG creation exited with code $EXIT_CODE"
          echo "--- STDERR ---"
          cat dmg-stderr.log
          echo "--- STDOUT ---"
          cat dmg-stdout.log
          if [ $EXIT_CODE -ne 0 ]; then
            echo "::error::DMG creation failed. See logs above."
            exit $EXIT_CODE
          fi
          ls -l ../releases/ADFinder.dmg || echo "::error::ADFinder.dmg not found in releases directory"

      - name: Upload DMG logs
        uses: actions/upload-artifact@v4.4.3
        with:
          name: DMG-Logs
          path: |
            Amiga/Tools/ADFinder/distribution/dmg-stdout.log
            Amiga/Tools/ADFinder/distribution/dmg-stderr.log

      - name: Upload DMG
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ADFinder-DMG
          path: Amiga/Tools/ADFinder/releases/ADFinder*.dmg
          retention-days: 7