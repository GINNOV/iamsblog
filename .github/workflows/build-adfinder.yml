# This workflow builds the ADFinder application and packages it into a .dmg disk image
# in a single, streamlined job.
#
# Trigger:
# - Runs on a push to the 'master' branch ONLY if the commit message
#   includes the string '#build-binary'.
# - Can also be triggered manually from the GitHub Actions UI.

name: Build ADFinder DMG

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  # This single job handles all steps: dependency installation, building,
  # and packaging the DMG.
  build-and-create-dmg:
    # This condition ensures the job only runs if the commit message
    # contains '#build-binary'. This check is case-sensitive.
    if: contains(github.event.head_commit.message, '#build-binary')
    runs-on: macos-latest
    steps:
      # Step 1: Check out the repository's code.
      # fetch-depth: 0 ensures we get the full history to access commit messages.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Install the 'create-dmg' utility.
      # This is crucial because the user's build script needs this command to
      # successfully create the disk image.
      - name: Install create-dmg dependency
        run: brew install create-dmg

      # Step 3: Select the required Xcode version.
      # This logic iterates through potential Xcode 16 versions and selects the
      # first one it finds, ensuring compatibility with the project file format.
      - name: Check and select Xcode version
        run: |
          echo "Default Xcode version:"
          xcodebuild -version
          echo "Available Xcode installations:"
          ls -d /Applications/Xcode*.app
          
          # Loop through potential Xcode 16 versions and select the first one found
          for version in 16.2 16.1 16.0 16; do
            if [ -d "/Applications/Xcode_${version}.app" ]; then
              echo "Found Xcode ${version}. Selecting it."
              sudo xcode-select -s "/Applications/Xcode_${version}.app/Contents/Developer"
              break
            fi
          done

          echo "Selected Xcode version:"
          xcodebuild -version

          # Verify that the selected version is indeed Xcode 16 or newer
          if [ "$(xcodebuild -version | awk '/Xcode/ {print $2}' | cut -d. -f1)" -lt 16 ]; then
             echo "::error::Failed to select Xcode 16.x. The active version is still less than 16."
             exit 1
          fi

      # Step 4: Run the all-in-one build and package script.
      # This script handles both the xcodebuild process and the final DMG creation.
      - name: Build .app and Create .dmg
        run: |
          set -euo pipefail
          cd Amiga/Tools/ADFinder/distribution
          chmod +x build_and_package.sh
          echo "▶ Starting build and package script..."
          # Execute the script. It will build the .app and then call gendmg.sh,
          # which can now find the 'create-dmg' command.
          ./build_and_package.sh --project ../ADFinder.xcodeproj --scheme "ADFinder - Release" --configuration Release
          echo "✅ Build and package script completed successfully."

      # Step 5: Upload the final .dmg file as a workflow artifact.
      # The path uses a wildcard to match the versioned DMG file name.
      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: ADFinder-DMG
          path: Amiga/Tools/ADFinder/releases/ADFinder*.dmg
          retention-days: 7
